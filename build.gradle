buildscript {
    ext {
        vaadinVersion = '8.1.6'
        springFoxVersion = '2.6.1'
        checkerFrameworkVersion = '2.2.0'
    }
}

plugins {
    id 'com.gradle.build-scan' version '1.9'
    id 'org.springframework.boot' version '1.5.11.RELEASE'
    id "com.github.kt3k.coveralls" version "2.8.1"
    id 'war'
    id 'jacoco'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.security.oauth:spring-security-oauth2')
    // Vaadin
    compile('com.vaadin:vaadin-spring-boot-starter')
    compile('org.vaadin.spring.addons:vaadin-spring-addon-i18n:2.0.0.RELEASE')
    compile('com.vaadin:vaadin-compatibility-server')
    runtime('com.vaadin:vaadin-compatibility-client-compiled')
    // OkHttp
    compile('com.squareup.okhttp3:okhttp:3.9.0')
    // Utilities
    compile('org.projectlombok:lombok')
    compile("org.checkerframework:checker-qual:${checkerFrameworkVersion}")
    compile("com.google.guava:guava:20.0")
    compile('org.pegdown:pegdown:1.6.0')
    compile('commons-io:commons-io:2.5')
    compile('commons-validator:commons-validator:1.6')
    compile('org.ocpsoft.prettytime:prettytime:4.0.1.Final')
    // Database
    runtime('com.h2database:h2') // development and test
    runtime('mysql:mysql-connector-java') // production
    // Docs
    compile("io.springfox:springfox-swagger2:${springFoxVersion}")
    compile("io.springfox:springfox-swagger-ui:${springFoxVersion}")
    // Tests
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    imports {
        mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
    }
}

war {
    baseName = 'mosaic'
    version = '0.5'
    archiveName = baseName + "." + extension
}

springBoot {
    executable = true
}

buildScan {
    licenseAgreementUrl = 'https://gradle.com/terms-of-service'
    licenseAgree = 'yes'
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}